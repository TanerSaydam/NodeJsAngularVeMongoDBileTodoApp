{"ast":null,"code":"import { TodoModel } from './models/todo.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_30_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.get(todo_r1));\n    });\n    i0.ɵɵtext(9, \"G\\u00FCncelle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_30_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.delete(todo_r1));\n    });\n    i0.ɵɵtext(11, \"Sil\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r1.work);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r1.isCompleted ? \"Yap\\u0131ld\\u0131\" : \"Yap\\u0131lacak\");\n  }\n}\nexport class AppComponent {\n  constructor(_http) {\n    this._http = _http;\n    this.todos = [];\n    this.work = \"\";\n    this.updateModel = new TodoModel();\n    this.apiUrl = \"http://localhost:5000/api\";\n    this.getAll();\n  }\n  getAll() {\n    this._http.get(this.apiUrl + \"/getall\").subscribe(res => {\n      this.todos = res;\n    });\n  }\n  add() {\n    let model = {\n      \"work\": this.work\n    };\n    this._http.post(this.apiUrl + \"/add\", model).subscribe(res => {\n      this.getAll();\n    });\n  }\n  delete(model) {\n    this._http.post(this.apiUrl + \"/delete\", model).subscribe(res => {\n      this.getAll();\n    });\n  }\n  get(model) {\n    this.updateModel = {\n      ...model\n    };\n  }\n  update() {\n    this._http.post(this.apiUrl + \"/update\", this.updateModel).subscribe(res => {\n      this.getAll();\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 31,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"work\"], [\"type\", \"text\", \"name\", \"work\", \"id\", \"work\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mt-1\"], [1, \"btn\", \"btn-outline-primary\", \"w-100\", 3, \"click\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-outline-warning\", \"btn-sm\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", \"btn-sm\", \"mx-1\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Yap\\u0131lacak \\u0130\\u015F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.work = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n        return ctx.add();\n      });\n      i0.ɵɵtext(7, \"Kaydet\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"hr\");\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 2);\n      i0.ɵɵtext(11, \"G\\u00FCncellenecek \\u0130\\u015F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.updateModel.work = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_14_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵtext(15, \"G\\u00FCncelle\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"hr\");\n      i0.ɵɵelementStart(17, \"div\", 1)(18, \"table\", 6)(19, \"thead\")(20, \"tr\")(21, \"th\");\n      i0.ɵɵtext(22, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Yap\\u0131lacak \\u0130\\u015F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Durumu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"td\");\n      i0.ɵɵtext(28, \"\\u0130\\u015Flemler\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"tbody\");\n      i0.ɵɵtemplate(30, AppComponent_tr_30_Template, 12, 3, \"tr\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.work);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.updateModel.work);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,QAAQ,qBAAqB;;;;;;;;IC0BvCC,0BAA6C;IACvCA,YAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAA8C;IAAAA,iBAAK;IACvDA,0BAAI;IAC6CA;MAAA;MAAA;MAAA;MAAA,OAASA,kCAAS;IAAA,EAAC;IAACA,6BAAQ;IAAAA,iBAAS;IACpFA,kCAA0E;IAAvBA;MAAA;MAAA;MAAA;MAAA,OAASA,qCAAY;IAAA,EAAC;IAACA,oBAAG;IAAAA,iBAAS;;;;;IALpFA,eAAS;IAATA,8BAAS;IACTA,eAAa;IAAbA,kCAAa;IACbA,eAA8C;IAA9CA,kFAA8C;;;ADtB5D,OAAM,MAAOC,YAAY;EAKvBC,YACUC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IALf,UAAK,GAAgB,EAAE;IACvB,SAAI,GAAW,EAAE;IACjB,gBAAW,GAAc,IAAIJ,SAAS,EAAE;IACxC,WAAM,GAAW,2BAA2B;IAI1C,IAAI,CAACK,MAAM,EAAE;EACf;EAEAA,MAAM;IACJ,IAAI,CAACD,KAAK,CAACE,GAAG,CAAc,IAAI,CAACC,MAAM,GAAG,SAAS,CAAC,CAACC,SAAS,CAACC,GAAG,IAAE;MAClE,IAAI,CAACC,KAAK,GAAGD,GAAG;IAClB,CAAC,CAAC;EACJ;EAEAE,GAAG;IACD,IAAIC,KAAK,GAAG;MAAC,MAAM,EAAE,IAAI,CAACC;IAAI,CAAC;IAC/B,IAAI,CAACT,KAAK,CAACU,IAAI,CAAM,IAAI,CAACP,MAAM,GAAG,MAAM,EAACK,KAAK,CAAC,CAACJ,SAAS,CAACC,GAAG,IAAE;MAC9D,IAAI,CAACJ,MAAM,EAAE;IACf,CAAC,CAAC;EACJ;EAEAU,MAAM,CAACH,KAAgB;IACrB,IAAI,CAACR,KAAK,CAACU,IAAI,CAAM,IAAI,CAACP,MAAM,GAAG,SAAS,EAACK,KAAK,CAAC,CAACJ,SAAS,CAACC,GAAG,IAAE;MACjE,IAAI,CAACJ,MAAM,EAAE;IACf,CAAC,CAAC;EACJ;EAEAC,GAAG,CAACM,KAAgB;IAClB,IAAI,CAACI,WAAW,GAAG;MAAC,GAAGJ;IAAK,CAAC;EAC/B;EAEAK,MAAM;IACJ,IAAI,CAACb,KAAK,CAACU,IAAI,CAAM,IAAI,CAACP,MAAM,GAAG,SAAS,EAAC,IAAI,CAACS,WAAW,CAAC,CAACR,SAAS,CAACC,GAAG,IAAE;MAC5E,IAAI,CAACJ,MAAM,EAAE;IACf,CAAC,CAAC;EACJ;;AAtCWH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBrB,8BAAuB;MAEDA,2CAAY;MAAAA,iBAAQ;MACtCA,gCAAiF;MAAlDA;QAAA;MAAA,EAAkB;MAAjDA,iBAAiF;MAEnFA,8BAA6B;MACmBA;QAAA,OAASsB,SAAK;MAAA,EAAC;MAACtB,sBAAM;MAAAA,iBAAS;MAE/EA,qBAAI;MACJA,8BAAwB;MACJA,gDAAgB;MAAAA,iBAAQ;MAC1CA,iCAA6F;MAA9DA;QAAA;MAAA,EAA8B;MAA7DA,iBAA6F;MAE/FA,+BAA6B;MACmBA;QAAA,OAASsB,YAAQ;MAAA,EAAC;MAACtB,8BAAQ;MAAAA,iBAAS;MAEpFA,sBAAI;MACJA,+BAAwB;MAIZA,kBAAC;MAAAA,iBAAK;MACVA,2BAAI;MAAAA,4CAAY;MAAAA,iBAAK;MACrBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,mCAAQ;MAAAA,iBAAK;MAGrBA,8BAAO;MACLA,8DAQK;MACPA,iBAAQ;;;MAlCqBA,eAAkB;MAAlBA,kCAAkB;MAQlBA,eAA8B;MAA9BA,8CAA8B;MAiBpCA,gBAAS;MAATA,mCAAS","names":["TodoModel","i0","AppComponent","constructor","_http","getAll","get","apiUrl","subscribe","res","todos","add","model","work","post","delete","updateModel","update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Test\\NodeJsAngularVeMongoDBileTodoApp\\frontend\\src\\app\\app.component.ts","C:\\Test\\NodeJsAngularVeMongoDBileTodoApp\\frontend\\src\\app\\app.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { TodoModel } from './models/todo.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  todos: TodoModel[] = [];\n  work: string = \"\";\n  updateModel: TodoModel = new TodoModel();\n  apiUrl: string = \"http://localhost:5000/api\";\n  constructor(\n    private _http: HttpClient\n  ){\n    this.getAll();\n  }\n\n  getAll(){\n    this._http.get<TodoModel[]>(this.apiUrl + \"/getall\").subscribe(res=>{\n      this.todos = res;\n    });\n  }\n\n  add(){\n    let model = {\"work\": this.work};\n    this._http.post<any>(this.apiUrl + \"/add\",model).subscribe(res=>{\n      this.getAll();\n    });\n  }\n\n  delete(model: TodoModel){\n    this._http.post<any>(this.apiUrl + \"/delete\",model).subscribe(res=>{\n      this.getAll();\n    });\n  }\n\n  get(model: TodoModel){\n    this.updateModel = {...model};    \n  }\n\n  update(){\n    this._http.post<any>(this.apiUrl + \"/update\",this.updateModel).subscribe(res=>{\n      this.getAll();\n    })\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"form-group\">\n    <label for=\"work\">Yapılacak İş</label>\n    <input type=\"text\" name=\"work\" [(ngModel)]=\"work\" id=\"work\" class=\"form-control\">\n  </div>\n  <div class=\"form-group mt-1\">\n    <button class=\"btn btn-outline-primary w-100\" (click)=\"add()\">Kaydet</button>\n  </div>\n  <hr>\n  <div class=\"form-group\">\n    <label for=\"work\">Güncellenecek İş</label>\n    <input type=\"text\" name=\"work\" [(ngModel)]=\"updateModel.work\" id=\"work\" class=\"form-control\">\n  </div>\n  <div class=\"form-group mt-1\">\n    <button class=\"btn btn-outline-primary w-100\" (click)=\"update()\">Güncelle</button>\n  </div>\n  <hr>\n  <div class=\"form-group\">\n    <table class=\"table table-bordered\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>Yapılacak İş</th>\n          <th>Durumu</th>\n          <td>İşlemler</td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let todo of todos let i = index\">\n          <td>{{i + 1}}</td>\n          <td>{{todo.work}}</td>\n          <td>{{todo.isCompleted ? \"Yapıldı\" : \"Yapılacak\"}}</td>\n          <td>\n            <button class=\"btn btn-outline-warning btn-sm\" (click)=\"get(todo)\">Güncelle</button>\n            <button class=\"btn btn-outline-danger btn-sm mx-1\" (click)=\"delete(todo)\">Sil</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}